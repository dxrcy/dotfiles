#------------------------------------------------------------------------------#
#                      * Blazingly fast Hyprland config *                      #
#------------------------------------------------------------------------------#

$HYPR = ~/.config/hypr
$MOD = SUPER
# Assumes `$TERMINAL [ARGS...]` will run arguments as command
# Also using `foot` for terminal popups, for faster startup time
$TERMINAL = kitty
$BROWSER = "$BROWSER"

$MONITOR1 = eDP-1

$SW = lua $HYPR/sw.lua

#-------------------------------------------------------------------------------
# Monitors

monitor =          , preferred, auto, auto
monitor = $MONITOR1, preferred, auto, 1.6

#-------------------------------------------------------------------------------
# Environment

# Tmux be like
exec = tmux setenv -g HYPRLAND_INSTANCE_SIGNATURE "$HYPRLAND_INSTANCE_SIGNATURE"

# TODO: Are all of these required?
env = XCURSOR_SIZE,24
env = HYPRCURSOR_SIZE,24
env = CLIPBOARD_NOGUI,1
env = QT_SCREEN_SCALE_FACTORS,0.8

#-------------------------------------------------------------------------------
# Autostart

# System tray
exec-once = nm-applet
# Notification daemon
exec-once = dunst
# Clipboard manager
exec-once = clipse -listen

# Idle daemon
# This can also be done with a systemd service
exec-once = killall hypridle; hypridle
# Hide cursor
exec-once = killall unclutter; unclutter -idle 1

# Night mode screen filter
exec-once = hyprsunset
# Status bar
exec-once = eww daemon & eww open bar

# Reset audio
exec-once = sleep 1; bt mute-if-disconnected
exec-once = sleep 1; volume-brightness m0

# Windows
exec-once = [workspace 2 silent] sleep 1; $BROWSER
exec-once = $SW --autostart

#-------------------------------------------------------------------------------
# Variables

general {
    border_size = 1
    gaps_in = 0
    gaps_out = 0

    col.active_border = rgba(ffdd2255)
    col.inactive_border = rgba(00000000)

    layout = master
    no_focus_fallback = true

    resize_on_border = true
    hover_icon_on_border = true

    allow_tearing = false
}

master {
    new_status = slave
}

decoration {
    rounding = 4

    blur {
        enabled = false
    }
    shadow {
        enabled = false
    }
}

animations {
    enabled = false
}

input {
    float_switch_override_focus = 0

    touchpad {
        disable_while_typing = false
        natural_scroll = true
        drag_lock = true
    }
}

misc {
    disable_hyprland_logo = true

    enable_swallow = true
    # TODO: Specify terminal class
    swallow_regex = ^.*$
}

binds {
    # More intuitive when switching to previous workspace
    allow_workspace_cycles = true
}

ecosystem {
    no_update_news = true
    no_donation_nag = true
}

#-------------------------------------------------------------------------------
# Keybinds - Windows

# Kill current window
bind = $MOD, Q,           killactive
bind = $MOD, scircumflex, killactive

# Window modes
bind = $MOD, Space, togglefloating
bind = $MOD, F,     fullscreen
bind = $MOD, P,     pseudo # For dwindle layout

# Focus next window
bind = $MOD, L, movefocus, r
bind = $MOD, H, movefocus, l
bind = $MOD, K, movefocus, u
bind = $MOD, J, movefocus, d

# Move window (stay inside group)
bind = $MOD SHIFT, L, movewindow, r
bind = $MOD SHIFT, H, movewindow, l
bind = $MOD SHIFT, K, movewindow, u
bind = $MOD SHIFT, J, movewindow, d
# Move window (break into/out of group)
bind = $MOD CTRL SHIFT, L, movewindoworgroup, r
bind = $MOD CTRL SHIFT, H, movewindoworgroup, l
bind = $MOD CTRL SHIFT, K, movewindoworgroup, u
bind = $MOD CTRL SHIFT, J, movewindoworgroup, d

# Tabbed windows
bind = $MOD,       T, togglegroup
bind = $MOD SHIFT, T, lockactivegroup, toggle
bind = CTRL ALT,   H, changegroupactive, b
bind = CTRL ALT,   L, changegroupactive, f

# Focus monitor
bind = $MOD CTRL, H, focusmonitor, 0
bind = $MOD CTRL, L, focusmonitor, 1

#-------------------------------------------------------------------------------
# Keybinds - Workspaces

# Cycle previous workspace
bindp = $MOD, tab, workspace, previous
# Toggle recent special workspace
bind = $MOD, grave, exec, $SW --recent

# Switch workspace
bind = $MOD, 1, workspace, 1
bind = $MOD, 2, workspace, 2
bind = $MOD, 3, workspace, 3
bind = $MOD, 4, workspace, 4
bind = $MOD, 5, workspace, 5
bind = $MOD, 6, workspace, 6
bind = $MOD, 7, workspace, 7
bind = $MOD, 8, workspace, 8
bind = $MOD, 9, workspace, 9
bind = $MOD, 0, workspace, 10

# Hide all special workspaces when switching workspaces (overload)
bind = $MOD, tab, exec, $SW --hide-all
bind = $MOD, 1,   exec, $SW --hide-all
bind = $MOD, 2,   exec, $SW --hide-all
bind = $MOD, 3,   exec, $SW --hide-all
bind = $MOD, 4,   exec, $SW --hide-all
bind = $MOD, 5,   exec, $SW --hide-all
bind = $MOD, 6,   exec, $SW --hide-all
bind = $MOD, 7,   exec, $SW --hide-all
bind = $MOD, 8,   exec, $SW --hide-all
bind = $MOD, 9,   exec, $SW --hide-all
bind = $MOD, 0,   exec, $SW --hide-all

# Focus special workspace
bind = $MOD, F2,  exec, $SW mail
bind = $MOD, F3,  exec, $SW music
bind = $MOD, F4,  exec, $SW social
bind = $MOD, F12, exec, $SW calculator
bind = $MOD CTRL, W,           exec, $SW vpn
bind = $MOD CTRL, gcircumflex, exec, $SW vpn

# Move current window to workspace
bind = $MOD SHIFT, 1, movetoworkspacesilent, 1
bind = $MOD SHIFT, 2, movetoworkspacesilent, 2
bind = $MOD SHIFT, 3, movetoworkspacesilent, 3
bind = $MOD SHIFT, 4, movetoworkspacesilent, 4
bind = $MOD SHIFT, 5, movetoworkspacesilent, 5
bind = $MOD SHIFT, 6, movetoworkspacesilent, 6
bind = $MOD SHIFT, 7, movetoworkspacesilent, 7
bind = $MOD SHIFT, 8, movetoworkspacesilent, 8
bind = $MOD SHIFT, 9, movetoworkspacesilent, 9
bind = $MOD SHIFT, 0, movetoworkspacesilent, 10

# Move current window to special workspace
# TODO: Do something better with this
bind = $MOD SHIFT, F2, movetoworkspacesilent, special:mail
bind = $MOD SHIFT, F3, movetoworkspacesilent, special:music
bind = $MOD SHIFT, F4, movetoworkspacesilent, special:social

#-------------------------------------------------------------------------------
# Keybinds - Applications

# Open terminal, with options for tmux
bind = $MOD,      Return, exec, $TERMINAL tmux
bind = $MOD ALT,  Return, exec, $TERMINAL tmux attach
bind = $MOD CTRL, Return, exec, $TERMINAL sh -c \
    'printf "\033[1m(no tmux)\n" && zsh'

# Open blank text file in terminal
bind = $MOD, o, exec, $TERMINAL tmux -L FOO new \
    'cd ~/docs/notes && nvim $(notename) && zsh'

#-------------------------------------------------------------------------------
# Keybinds - Popups

# Application picker, with alternatives
bind = $MOD, D, exec, $(terminal-popup fzf-menu \
    "$XDG_DATA_HOME/applications-minimal/")
bind = $MOD SHIFT, D, exec, $(terminal-popup fzf-menu \
    "/usr/share/applications/ $XDG_DATA_HOME/applications/")
bind = $MOD CTRL, D, exec, wofi --show drun

# Powermenu (shutdown, etc)
bind = $MOD, escape, exec, fzf-powermenu

# Emoji
bind = $MOD, period, exec, wl-copy $(terminal-popup fzf-emoji) \
    && notify-send 'Copied' -t 800

# Clipboard
bind = $MOD, V, exec, foot --app-id=popup-clipse -- clipse

# Device mount/unmount
bind = $MOD, M, exec, mount-gui --notify

#-------------------------------------------------------------------------------
# Keybinds - Misc

# Switch keyboard mode
bind = ALT, scircumflex, exec, hyprctl keyword input:kb_layout us
bind = ALT, Q,           exec, hyprctl keyword input:kb_layout epo
bind = SUPER, E,         exec, hyprctl keyword input:kb_layout us
bind = SUPER SHIFT, E,   exec, hyprctl keyword input:kb_layout epo

# Screenshot, with fallback
bind =      , Print, exec, flameshot gui
bind = Shift, Print, exec, grim -g "$(slurp -d)" - | wl-copy

# Bluetooth device
bind = $MOD, B,       exec, bt connect
bind = $MOD SHIFT, B, exec, bt disconnect

# Status notifications
bind = $MOD, S, exec, player-info notify
bind = $MOD SHIFT, S, exec, dunstify -t 2000 "$(date '+%H:%M | %a %d %b')"
# Clear notifications
bind = $MOD CTRL, N, exec, dunstctl close-all

# Move/resize windows with mod + LMB/RMB and dragging
bindm = $MOD, mouse:272, movewindow
bindm = $MOD, mouse:273, resizewindow

# Lock with power button (systemd suspends independently)
bindl = , XF86PowerOff, exec, hyprlock

# Change volume/brightness
bindel = ,XF86AudioRaiseVolume,  exec, volume-brightness v+
bindel = ,XF86AudioLowerVolume,  exec, volume-brightness v-
bindel = ,XF86AudioMute,         exec, volume-brightness vm
bindel = ,XF86AudioMicMute,      exec, volume-brightness mt
bindel = ,XF86MonBrightnessUp,   exec, volume-brightness b+
bindel = ,XF86MonBrightnessDown, exec, volume-brightness b-

# Audio controls (multimedia keys)
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay,  exec, playerctl play-pause
bindl = , XF86AudioNext,  exec, playerctl next
bindl = , XF86AudioPrev,  exec, playerctl previous

# Audio controls (normal keys)
bind = CTRL SHIFT, backslash,    exec, playerctl --all-players pause
bind = CTRL,       backslash,    exec, playerctl -p 'spotify' play-pause
bind = CTRL SHIFT, bracketleft,  exec, playerctl -p 'spotify' previous
bind = CTRL SHIFT, bracketright, exec, playerctl -p 'spotify' next
bind = CTRL SHIFT, jcircumflex,  exec, playerctl -p 'spotify' previous
bind = CTRL SHIFT, hcircumflex,  exec, playerctl -p 'spotify' next

#-------------------------------------------------------------------------------
# Window rules - Special workspaces

windowrulev2 = float, class:(terminal-calculator)
windowrulev2 = size 400 600, class:(terminal-calculator)

windowrulev2 = float, class:^(Windscribe)$

#-------------------------------------------------------------------------------
# Window rules - Popup terminals

windowrulev2 = float, class:(popup)
windowrulev2 = size 400 400, class:(popup)
windowrulev2 = stayfocused, class:(popup)

windowrulev2 = float,class:(popup-clipse)
windowrulev2 = size 622 652,class:(popup-clipse)

#-------------------------------------------------------------------------------
# Window rules - Misc

# Ignore maximize requests from apps (default)
windowrulev2 = suppressevent maximize, class:.*
# Fix some dragging issues with XWayland (default)
windowrulev2 = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

# Fix flameshot
windowrule = move 0 0, class:(flameshot)
windowrule = pin, class:(flameshot)
windowrule = noborder, class:(flameshot)
windowrule = stayfocused, class:(flameshot)
windowrule = float, class:(flameshot)
windowrule = monitor $MONITOR1, class:(flameshot)

# Fix firefox picture-in-picture window
windowrulev2 = float, title:^(Picture-in-Picture)$
windowrulev2 = size 420 240, title:^(Picture-in-Picture)$
windowrulev2 = move 100%-430 10, title:^(Picture-in-Picture)$
windowrulev2 = pin, title:^(Picture-in-Picture)$

